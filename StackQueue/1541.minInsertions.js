// 1541. 平衡括号字符串的最少插入次数
// 给你一个括号字符串 s ，它只包含字符 '(' 和 ')' 。一个括号字符串被称为平衡的当它满足：
// 任何左括号 '(' 必须对应两个连续的右括号 '))' 。
// 左括号 '(' 必须在对应的连续两个右括号 '))' 之前。
// 比方说 "())"， "())(())))" 和 "(())())))" 都是平衡的， ")()"， "()))" 和 "(()))" 都是不平衡的。
// 你可以在任意位置插入字符 '(' 和 ')' 使字符串平衡。
// 请你返回让 s 平衡的最少插入次数。
/**
 * @param {string} s
 * @return {number}
 */
var minInsertions = function(s) {
    let need = 0,res = 0;
    for(let i=0;i<s.length;i++){
        let c = s.charAt(i);
        if(c==='('){
            need+=2;
            if(need%2===1){
                res++;
                need--;
            }
        }
        if(c===')'){
            need--;
            if(need===-1){
                res++;
                need = 1;
            }
        }
    }
    return res+need;
}

const s = "())";
console.log(minInsertions(s));

// 输入：s = "(()))"
// 输出：1
// 解释：第二个左括号有与之匹配的两个右括号，但是第一个左括号只有一个右括号。
// 我们需要在字符串结尾额外增加一个 ')' 使字符串变成平衡字符串 "(())))" 
// 输入：s = "())"
// 输出：0
// 解释：字符串已经平衡了。
